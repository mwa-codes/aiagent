services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/postgres
      - DATABASE_URL_SYNC=postgresql://postgres:postgres@db:5432/postgres
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-in-production-12345678901234567890}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - db

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "55432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  dashboards:
    build: ./dashboards
    ports:
      - "8501:8501"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - ENVIRONMENT=${ENVIRONMENT:-development}
# Optional: comment out if not using dashboards
# restart: unless-stopped

volumes:
  pgdata:
